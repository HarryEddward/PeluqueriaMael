# ___________
# ADVERTENCIA: Al referenciar variables, nunca usar puntos para separar de trabajos: Ex.: &common.zip -> &common_zip
# -----------
# MOTIVO: Javascript lo soporta, Python no (almenos en la libreria usada: pyyaml). Trabajamos mas en compatibilidad que en legbilidad
# ------
name_version: "v1"

host: "0.0.0.0"

ssl:
  cert: "../../../certs/peluqueriamael.com_cert/peluqueriamael.com.crt"
  key: "../../../certs/peluqueriamael.com_key.txt"

common:
  gzip: &common_gzip
    enabled: true
    min_size: 1000

  cors: &common_cors
    enabled: true
    origins:
      - "*"
    methods:
      - "*"
    headers:
      - "*"

validation:
  email:
    max_str: 150
    min_str: 7 # a@a.com (Minimun str)
  password:
    max_str: 75
    min_str: 15

app:
  API:
    testing:
      host: 127.0.0.1 #Host only using for doing ops in the container
    env: prod
    net:
      protocol: "http"
      port: 8000
    ssl: false
    cache: true
    gzip: *common_gzip
    cors:
      enabled: true
      origins:
        - "*"
      methods:
        - "GET"
        - "POST"
      headers:
        - "*"

  APIWS:
    env: dev
    net:
      protocol: "ws"
      port: 8100
    ssl: false

  CryptoAPI:
    host: deployment-peluqueriamael_app_cryptoapi-1 #Name of the container to access in the specific network from docker
    env: dev
    testing:
      host: 127.0.0.1
    net:
      port: 8200
    ssl: false
    cache: true
    gzip: *common_gzip
    cors:
      enabled: true
      # Se quito el apartado de origins, ya que solo hará úso de la API Estática
      origins:
        - "http://0.0.0.0:8000"
        - "http://0.0.0.0:8300"
      methods:
        - "POST"
      headers:
        - "*"
    cpu: true
    gpu:
      enabled: true
      graphic_card: "gt-710"  # Feature not added

  StatusAPI:
    env: dev
    mirror:
      - CryptoAPI
      - APIWS
      - API
    net:
      protocol: "http"
      port: 8300
    ssl: true
    cache: true
    cors: *common_cors

web:
  API:
    env: dev
    net:
      port: 8000
    ssl: true
    cache: true
    gzip: *common_gzip
    cors: *common_cors

  StatusAPI:
    env: prod
    net:
      port: 8300
    ssl: true
    cache: true
    gzip: *common_gzip
    cors:
      enabled: true
      origins:
        - "*"
      methods:
        - "GET"
      headers:
        - "*"

db:
  general_name_db: &general_name_db "PeluqueriaMael"

  persistant:
    rethinkdb:
      host: "rethinkdb_hairdresser"
      port:
        intercluster: 29015
        client: 28015
      db: *general_name_db
      tables:
        reservas: "Reservas"
    
    mongodb:
      host: "mongodb_hairdresser"
      port: 27017
      # Env's to use it in production
      # Hahahaha, you can't hacker, forget to know the prodcution envs
      username: "MONGODB_HAIRDRESSER_USERNAME"
      password: "MONGODB_HAIRDRESSER_PASSWORD"
      db: *general_name_db
      collections:
        reservas: "Reservas"
        usuarios: "Users"
        configuracion: "Configure"
        personal: "Personal"
        administrador: "Admin"
        tipos_de_pydantic: "Types"
  
  temporary:
    redis:
      host: "redis_hairdresser"
      port: 6379
      db:
        microservices:
          app:
            API: 1
            APIWS: 2
            CryptoAPI: 3
            StatusAPI: 4
          web:
            API: 5
            StatusAPI: 6